[{"C:\\Users\\kamil\\Desktop\\Masterschool\\nd0191-c1-myreads-main\\starter\\src\\index.js":"1","C:\\Users\\kamil\\Desktop\\Masterschool\\nd0191-c1-myreads-main\\starter\\src\\App.js":"2","C:\\Users\\kamil\\Desktop\\Masterschool\\nd0191-c1-myreads-main\\starter\\src\\BooksAPI.js":"3","C:\\Users\\kamil\\Desktop\\Masterschool\\nd0191-c1-myreads-main\\starter\\src\\Home.js":"4","C:\\Users\\kamil\\Desktop\\Masterschool\\nd0191-c1-myreads-main\\starter\\src\\SearchBooks.js":"5","C:\\Users\\kamil\\Desktop\\Masterschool\\nd0191-c1-myreads-main\\starter\\src\\BooksState.js":"6","C:\\Users\\kamil\\Desktop\\Masterschool\\nd0191-c1-myreads-main\\starter\\src\\Title.js":"7","C:\\Users\\kamil\\Desktop\\Masterschool\\nd0191-c1-myreads-main\\starter\\src\\BookShelf.js":"8","C:\\Users\\kamil\\Desktop\\Masterschool\\nd0191-c1-myreads-main\\starter\\src\\AllBooks.js":"9","C:\\Users\\kamil\\Desktop\\Masterschool\\nd0191-c1-myreads-main\\starter\\src\\BookShelfChange.js":"10"},{"size":262,"mtime":1652362658601,"results":"11","hashOfConfig":"12"},{"size":1189,"mtime":1652363179688,"results":"13","hashOfConfig":"12"},{"size":1055,"mtime":1636528524000,"results":"14","hashOfConfig":"12"},{"size":611,"mtime":1652362708875,"results":"15","hashOfConfig":"12"},{"size":4245,"mtime":1652362886322,"results":"16","hashOfConfig":"12"},{"size":787,"mtime":1652362673488,"results":"17","hashOfConfig":"12"},{"size":196,"mtime":1652362717277,"results":"18","hashOfConfig":"12"},{"size":628,"mtime":1652362700602,"results":"19","hashOfConfig":"12"},{"size":804,"mtime":1652362794730,"results":"20","hashOfConfig":"12"},{"size":761,"mtime":1652362689554,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"1aj0m9l",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"C:\\Users\\kamil\\Desktop\\Masterschool\\nd0191-c1-myreads-main\\starter\\src\\index.js",[],[],[],"C:\\Users\\kamil\\Desktop\\Masterschool\\nd0191-c1-myreads-main\\starter\\src\\App.js",["54"],[],"C:\\Users\\kamil\\Desktop\\Masterschool\\nd0191-c1-myreads-main\\starter\\src\\BooksAPI.js",[],[],"C:\\Users\\kamil\\Desktop\\Masterschool\\nd0191-c1-myreads-main\\starter\\src\\Home.js",[],[],"C:\\Users\\kamil\\Desktop\\Masterschool\\nd0191-c1-myreads-main\\starter\\src\\SearchBooks.js",["55"],[],"import React from \"react\";\r\nimport * as BooksAPI from \"./BooksAPI\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SearchBooks = ({ Books, updateShelf, updateExistBooks }) => {\r\n  \r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  const [books, setBooks] = useState([]);\r\n\r\n  const [booksProps, setBooksProps] = useState(Books);\r\n\r\n  const checkShelf = (book) => {\r\n    let shelf = \"\";\r\n    BooksAPI.getAll().then((books) => {\r\n      books.forEach((b) => {\r\n        if (b.id === book.id) {\r\n          shelf = b.shelf;\r\n        }\r\n      });\r\n      setBooksProps(\r\n        booksProps.map((b) => (b.id === book.id ? { ...book, shelf } : b))\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleChange = (query) => {\r\n    setQuery(query);\r\n    //if the query is empty prevent the API call\r\n    if (query === \"\") {\r\n      setBooks([]);\r\n      return;\r\n    }\r\n    //if the query is not empty, run the API call\r\n    BooksAPI.search(query).then((books) => {\r\n      //if the search returns an error, set the books to an empty array\r\n      if (books.error) {\r\n        setBooks([]);\r\n        return;\r\n      } else {\r\n        //if the search returns books, set the books state to the books array\r\n\r\n        const filterBooks = books.map((item) => {\r\n          const match = Books.find((item2) => item2.title === item.title);\r\n          if (match !== undefined)\r\n            return { ...item, shelf: match.shelf, exists: true };\r\n          else return { ...item, exists: false };\r\n        });\r\n        setBooks(filterBooks);\r\n      }\r\n    });\r\n  };\r\n\r\n  const searchResults =\r\n    query === \"\"\r\n      ? []\r\n      : books.filter((b) =>\r\n          b.title.toLowerCase().includes(query.toLowerCase())\r\n        );\r\n\r\n  const updateBooks = (book, e) => {\r\n    updateShelf((prev) => {\r\n      const newBook = { ...book, shelf: e.target.value };\r\n      BooksAPI.update(book, e.target.value);\r\n\r\n      return prev.concat(newBook);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-books\">\r\n      <div className=\"search-books-bar\">\r\n        <Link to=\"/\" className=\"close-search\">\r\n          Close\r\n        </Link>\r\n        <div className=\"search-books-input-wrapper\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search by title or author\"\r\n            onChange={(event) => handleChange(event.target.value)}\r\n            value={query}/>\r\n        </div>\r\n      </div>\r\n      <div className=\"search-books-results\">\r\n        <ol className=\"books-grid\">\r\n          {searchResults.map((book) => (\r\n            <li key={book.id}>\r\n              <div className=\"book\">\r\n                <div className=\"book-top\">\r\n                  <div\r\n                    className=\"book-cover\"\r\n                    style={{\r\n                      width: 128,\r\n                      height: 193,\r\n                      backgroundImage: `url(${\r\n                        book.imageLinks ? book.imageLinks.thumbnail : \"\"})`,\r\n                    }}/>\r\n                  <div className=\"book-shelf-changer\">\r\n                    <select\r\n                      defaultValue={book.exists ? book.shelf : \"\"}\r\n                      onChange={(e) =>\r\n                        book.exists\r\n                          ? updateExistBooks(book, e.target.value)\r\n                          : updateBooks(book, e)\r\n                      }>\r\n                      <option value=\"none\" disabled>\r\n                        Move to...\r\n                      </option>\r\n                      <option value=\"none\">None</option>\r\n                      <option value=\"currentlyReading\">\r\n                        Currently Reading\r\n                      </option>\r\n                      <option value=\"wantToRead\">Want to Read</option>\r\n                      <option value=\"read\">Read</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"book-title\">{book.title}</div>\r\n                <div className=\"book-authors\">\r\n                  {book.authors ? book.authors : \"\"}\r\n                </div>\r\n                <div>{book.exists ? \"Exists\" : \"\"}</div>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBooks;","C:\\Users\\kamil\\Desktop\\Masterschool\\nd0191-c1-myreads-main\\starter\\src\\BooksState.js",[],[],"C:\\Users\\kamil\\Desktop\\Masterschool\\nd0191-c1-myreads-main\\starter\\src\\Title.js",[],[],"C:\\Users\\kamil\\Desktop\\Masterschool\\nd0191-c1-myreads-main\\starter\\src\\BookShelf.js",[],[],"C:\\Users\\kamil\\Desktop\\Masterschool\\nd0191-c1-myreads-main\\starter\\src\\AllBooks.js",[],[],"C:\\Users\\kamil\\Desktop\\Masterschool\\nd0191-c1-myreads-main\\starter\\src\\BookShelfChange.js",[],[],{"ruleId":"56","severity":1,"message":"57","line":16,"column":6,"nodeType":"58","endLine":16,"endColumn":8,"suggestions":"59"},{"ruleId":"60","severity":1,"message":"61","line":14,"column":9,"nodeType":"62","messageId":"63","endLine":14,"endColumn":19},"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'Books'. Either include it or remove the dependency array. You can also do a functional update 'setBooks(B => ...)' if you only need 'Books' in the 'setBooks' call.","ArrayExpression",["64"],"no-unused-vars","'checkShelf' is assigned a value but never used.","Identifier","unusedVar",{"desc":"65","fix":"66"},"Update the dependencies array to be: [Books]",{"range":"67","text":"68"},[492,494],"[Books]"]